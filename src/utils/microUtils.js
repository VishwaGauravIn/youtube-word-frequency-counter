export function getTextFromXML(xml) {
  const parser = new DOMParser();
  const xmlDoc = parser.parseFromString(xml, "text/xml");
  const textElements = xmlDoc.getElementsByTagName("text");
  const textContents = Array.from(textElements)
    .map((el) => el.textContent)
    .join(" ");
  return textContents;
}

export function getCaptionUrl(captionArray) {
  let englishCaption = null;
  let nonAutoGeneratedCaption = null;
  let autoGeneratedCaption = null;

  for (const caption of captionArray) {
    if (caption.languageCode === "en") {
      englishCaption = caption.baseUrl;
      break;
    } else if (
      !caption.trackName.includes("(auto-generated)") &&
      !nonAutoGeneratedCaption
    ) {
      nonAutoGeneratedCaption = caption.baseUrl;
    } else if (
      caption.trackName.includes("(auto-generated)") &&
      !autoGeneratedCaption
    ) {
      autoGeneratedCaption = caption.baseUrl;
    }
  }

  return (
    englishCaption ||
    nonAutoGeneratedCaption ||
    autoGeneratedCaption ||
    captionArray[0].baseUrl
  );
}

export function getAlphaNumeric(string) {
  // alphanumeric with - and ' and space
  return string.replace(/[\p{P}\p{S}]/gu, "");
}
